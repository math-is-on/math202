#+title: Cylindrical Shells
#+author: Chase Mathison
#+date: 13 February 2024
#+email: cmathiso@su.edu
#+options: H:2 ':t ::t <:t email:t text:t todo:nil toc:nil 
#+startup: showall
#+startup: indent
#+startup: hidestars
#+startup: beamer
#+latex_class: beamer
#+latex_class_options: [presentation]
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %5BEAMER_act(Act) %4BEAMER_col(Col) %10BEAMER_extra(Extra)
#+latex_header: \mode<beamer>{\usetheme{Madrid}}
#+latex_header: \definecolor{SUred}{rgb}{0.59375, 0, 0.17969} % SU red (primary)
#+latex_header: \definecolor{SUblue}{rgb}{0, 0.17578, 0.38281} % SU blue (secondary)
#+latex_header: \setbeamercolor{palette primary}{bg=SUred,fg=white}
#+latex_header: \setbeamercolor{palette secondary}{bg=SUblue,fg=white}
#+latex_header: \setbeamercolor{palette tertiary}{bg=SUblue,fg=white}
#+latex_header: \setbeamercolor{palette quaternary}{bg=SUblue,fg=white}
#+latex_header: \setbeamercolor{structure}{fg=SUblue} % itemize, enumerate, etc
#+latex_header: \setbeamercolor{section in toc}{fg=SUblue} % TOC sections
#+latex_header: % Override palette coloring with secondary
#+latex_header: \setbeamercolor{subsection in head/foot}{bg=SUblue,fg=white}
#+latex_header: \setbeamercolor{date in head/foot}{bg=SUblue,fg=white}
#+latex_header: \institute[SU]{Shenandoah University}
#+latex_header: \titlegraphic{\includegraphics[width=0.5\textwidth]{\string~/Documents/suLogo/suLogo.pdf}}
#+latex_header: \newcommand{\R}{\mathbb{R}}
#+latex_header: \usepackage{tikz}
#+latex_header: \usepackage{pgfplots}

* Announcements
** Announcements
1. Exam Thursday (Pratice in MyOpenMath)
2. Office hours today 10am - 11am

* Lecture
** Last time
Last time we talked about the washer method to find volumes of
revolution.

The disk method and the washer method are very powerful for finding
these volumes, but they still don't allow us to find some types of
volumes of revolution.

For example, let's try to find the volume of the solid that is
generated by rotating the region bounded by the graph of \(f \left( x
\right) = x - x^2 \) and \(y = 0 \) about the \(y- \)axis.

** Example

** Cylindrical shells
Clearly, trying to do this with the washer method is pretty awful.

It would be nice if we had an easier way to find the volume of
revolution when the region is defined in terms of functions of \(x \)
but rotated about the \(y- \)axis.

Enter: _\hspace*{1in}_.

Let's illustrate the method of cylindrical shells on that last example
before we write down the general method.

** Example
Find the volume of the solid that is generated by rotating the region
bounded by the graph of \(f \left( x \right) = x - x^2 \) and \(y = 0
\) about the \(y- \)axis.

#+BEGIN_SRC python :exports none :results output :eval no-export
import matplotlib
matplotlib.use('Agg')
from matplotlib import rc
rc('font',**{'family':'serif','serif':['cm','Palatino']})
rc('text', usetex=True)
import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D

x = np.linspace(0,1,1000)
y = 0*x
t = np.linspace(0,2*np.pi,1000)

u,v = np.meshgrid(x,t)
X = u*np.cos(v)
Y = u*np.sin(v)
Z = (u-u**2)
z = x-x**2
fig = plt.figure()
ax = fig.gca(projection='3d')
ax.plot_surface(X,Y,Z,cmap='viridis',shade=False,alpha=0.6)
ax.plot(x,y,z,color='r',alpha=1)
plt.savefig('../img/day008-ex01.png')
#+END_SRC

#+RESULTS:

#+BEGIN_EXPORT latex 
\begin{center}
\includegraphics[width=0.5\textwidth]{../img/day008-ex01.png}
\end{center}
#+END_EXPORT
\vspace{10in}

** Example
#+BEGIN_SRC python :exports none :results output :eval no-export
import matplotlib
matplotlib.use('Agg')
from matplotlib import rc
rc('font',**{'family':'serif','serif':['cm','Palatino']})
rc('text', usetex=True)
import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D

x = np.linspace(0,1,1000)
uu = np.linspace(0.3,0.4,1000)
hh = 0.3-0.3**2
zz = np.linspace(0,hh,1000)
y = 0*x
t = np.linspace(0,2*np.pi,1000)

u,v = np.meshgrid(uu,t)
u2,v2 = np.meshgrid(zz,t)
X = u*np.cos(v)
Y = u*np.sin(v)
Z = hh*(1+0*u)
z = x-x**2
X2 = 0.3*np.cos(v)
Y2 = 0.3*np.sin(v)
Z2 = u2
X3 = 0.4*np.cos(v)
Y3 = 0.4*np.sin(v)
Z3 = u2

fig = plt.figure()
ax = fig.gca(projection='3d')
ax.plot_surface(X,Y,Z,cmap='viridis',shade=False,alpha=0.6)
ax.plot_surface(X2,Y2,Z2,cmap='viridis',shade=False,alpha=0.6)
ax.plot_surface(X3,Y3,Z3,cmap='viridis',shade=False,alpha=0.6)
ax.plot(x,y,z,color='r',alpha=1)
ax.set_xlim3d(-1,1)
ax.set_ylim3d(-1,1)
plt.savefig('../img/day008-ex02.png')
#+END_SRC

#+RESULTS:

#+BEGIN_EXPORT latex 
\includegraphics[width=0.5\textwidth]{../img/day008-ex02.png}
#+END_EXPORT
\vspace{10in}


** Cylindrical shells, the general method
What we did in the last example is exactly how we should proceed with
all cylindrical shell method problems.
*** Cylindrical shell method                                   :B_theorem:
:PROPERTIES:
:BEAMER_env: theorem
:END:
Let \(f \left( x \right) \) and \(g \left( x \right) \) be continuous
and nonnegative with \(f \left( x \right) \ge g \left( x \right) \) on
the interval \( \left[ a,b \right] \).  Define \(R \) as the region
bounded above by the graph of \(f \left( x \right) \), below by the
graph of \(g \left( x \right) \) and by the lines \(x=a \) and \(x=b
\). Then the volume of the solid generated by rotating \(R \) about the
\(y- \)axis is given by
\[
 \]
 \phantom{butts}

\phantom{butts}

** Example
Find the volume of the solid generated by rotating the region bounded
above by the graph of \(f \left( x \right) = \frac{e^x-1}{x} \), with
\(f \left( 0 \right) = 1 \), below by \(y = 0 \), and by the lines \(x
= 0 \) and \(x = 2 \) around the \(y- \)axis.

#+BEGIN_SRC python :exports none :results output :eval no-export
import matplotlib
matplotlib.use('Agg')
from matplotlib import rc
rc('font',**{'family':'serif','serif':['cm','Palatino']})
rc('text', usetex=True)
import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D

r = np.linspace(0.01,2,1000)
t = np.linspace(0,2*np.pi,1000)

u,v = np.meshgrid(r,t)
X = u*np.cos(v)
Y = u*np.sin(v)
Z = (np.exp(u)-1)/u
x = 2*np.cos(v)
y = 2*np.sin(v)
z = (np.exp(2)-1)/2*(u/2)
fig = plt.figure()
ax = fig.gca(projection='3d')
ax.plot_surface(X,Y,Z,cmap='viridis',shade=True)
ax.plot_surface(x,y,z,cmap='viridis',shade=True,alpha=0.8)
plt.savefig('../img/day008-ex03.png')
#+END_SRC

#+RESULTS:

#+BEGIN_EXPORT latex 
\begin{center}
\includegraphics[width=0.5\textwidth]{../img/day008-ex03.png}
\end{center}
#+END_EXPORT

** Example

** Cylindrical shells (functions of \(y \))
Just like with the other methods, this easily generalizes to functions
of \(y \), with appropriate changes.
*** Cylindrical shell method (for functions of \(y \))          :B_theorem:
:PROPERTIES:
:BEAMER_env: theorem
:END:
Let \(f \left( y \right) \) and \(g \left( y \right) \) be continuous
and nonnegative with \(f \left( y \right) \ge g \left( y \right) \) on
the interval \( \left[ c,d \right] \).  Define \(Q \) as the region
bounded on the right by the graph of \(f \left( y \right) \), on the left by the
graph of \(g \left( y \right) \) and by the lines \(y=c \) and \(y=d
\). Then the volume of the solid generated by rotating \(Q \) about the
\(x- \)axis is given by
\[
 \]
 \phantom{butts}

\phantom{butts}


** Example
Find the volume of the solid generated by rotating the region bounded
by the curves \(y = \sqrt{\ln \left( x \right)} \), \(y = 0 \), and \(x = e^2
\) about the \(x- \)axis.

#+BEGIN_SRC python :exports none :results output :eval no-export
import matplotlib
matplotlib.use('Agg')
from matplotlib import rc
rc('font',**{'family':'serif','serif':['cm','Palatino']})
rc('text', usetex=True)
import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D

r = np.linspace(1,np.exp(2),1000)
t = np.linspace(0,2*np.pi,1000)
h = np.linspace(0,np.sqrt(2),1000)

u,v = np.meshgrid(r,t)
uu,vv = np.meshgrid(h,t)
X = u
Y = np.sqrt(np.log(u))*np.cos(v)
Z = np.sqrt(np.log(u))*np.sin(v)
x = np.exp(2)*(1+0*uu)
y = uu*np.cos(v)
z = uu*np.sin(v)
fig = plt.figure()
ax = fig.gca(projection='3d')
ax.plot_surface(X,Y,Z,cmap='viridis',shade=True)
ax.plot_surface(x,y,z,cmap='viridis',shade=True)
plt.savefig('../img/day008-ex04.png')
#+END_SRC

#+RESULTS:

#+BEGIN_EXPORT latex 
\begin{center}
\includegraphics[width=0.5\textwidth]{../img/day008-ex04.png}
\end{center}
#+END_EXPORT
\vspace{10in}

** Example


** So which method should I use?
At this point you may ask, which method is the best one to use?  
The method you use depends heavily on the context of the problem.  For
instance, in the last example, we took a region defined in terms of a
function of \(x \) and rotated it about the \(x- \)axis, something
that usually we would use the disk or washer method for. 

But the disk method gave us an integral that we (currently) don't know
how to evaluate.  So in this case, we tried the cylindrical shell
method as a last ditch effort, and it happened to work out for us.

As a /rule of thumb/, if you are rotating a region that is defined in
terms of functions of \(x \) about the \(x- \)axis, you'll
_\hspace*{1in}_ use the _\hspace*{1in}_ method.  If you are
rotating a region defined in terms of functions of \(x \) about the
\(y- \)axis, you'll _\hspace*{1in}_ use the _\hspace*{1in}_.

Similar statements hold for functions of \(y \).

** Example
Find the volume of the solid generated by rotating the region bounded
by the graphs of \(y = \left( e^x + e^{-x} \right)/2 \), \(y = 0 \)
and \(x = 1 \), \(x = -1 \) about the \(x- \)axis.
\vspace{10in}

** Example

** Example
Find the volume of the solid generated by rotating the region bounded
by the curves \(y = x \), \(y = 2-x \) and \(y = 0 \) about the \(x-
\)axis.
\vspace{10in}

** Example
